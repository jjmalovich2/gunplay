{"version":3,"file":"index-DW8nENOg.js","sources":["../../src/src.js","../../src/assets.js","../../src/platform.js","../../src/guns.js","../../src/main.js"],"sourcesContent":["import kaplay from \"kaplay\";\nimport \"kaplay/global\"; // uncomment if you want to use without the k. prefix\n\nexport default kaplay({\n    background: [141, 183, 255],\n    global: true\n});","import kaplay from \"./src.js\";\n\nexport default function loadAssets() {\n    // load assets\n    loadRoot(\"./\");\n    loadSprite(\"bean\", \"/sprites/bean.png\");\n    loadSprite(\"evil\", \"/sprites/evil.png\");\n    loadSprite(\"spike\", \"/sprites/spike.png\");\n    loadSprite(\"grass\", \"/sprites/grass.png\");\n    loadSprite(\"portal\", \"/sprites/portal.png\");\n    loadSprite(\"coin\", \"/sprites/coin.png\");\n    loadSprite(\"umbrella-hat\", \"/sprites/umbrella_hat.png\");\n    loadSprite(\"propeller-hat\", \"/sprites/propeller_hat.png\");\n    loadSprite(\"propeller\", \"/sprites/propeller.png\");\n    loadSprite(\"gun\", \"/sprites/gun.png\");\n    loadSprite(\"cursor\", \"/sprites/cursor.png\");\n    loadSound(\"coin\", \"/examples/sounds/score.mp3\");\n    loadSound(\"powerup\", \"/examples/sounds/powerup.mp3\");\n    loadSound(\"blip\", \"/examples/sounds/blip.mp3\");\n    loadSound(\"hit\", \"/examples/sounds/hit.mp3\");\n    loadSound(\"portal\", \"/examples/sounds/portal.mp3\");\n\n}\n","export default function findPlatformHitbox(map) {\n    const height = map.length;\n    const width = map[0].length;\n    const visited = Array.from({ length: height }, () => Array(width).fill(false));\n    const hitboxes = [];\n\n    function expandRectangle(startX, startY) {\n        let maxWidth = 0, maxHeight = 0;\n\n        while (startX + maxWidth < width && map[startY][startX + maxWidth] === '=' && !visited[startY][startX + maxWidth]) {\n            maxWidth++;\n        }\n\n        while (startY + maxHeight < height) {\n            for (let x = 0; x < maxWidth; x++) {\n                if (map[startY + maxHeight][startX + x] !== '=' || visited[startY + maxHeight][startX + x]) {\n                    return { x: startX, y: startY, width: maxWidth, height: maxHeight };\n                }\n            }\n            maxHeight++;\n        }\n\n        return { x: startX, y: startY, width: maxWidth, height: maxHeight };\n    }\n\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            if (map[y][x] === '=' && !visited[y][x]) {\n                let rect = expandRectangle(x, y);\n                hitboxes.push(rect);\n\n                for (let dy = 0; dy < rect.height; dy++) {\n                    for (let dx = 0; dx < rect.width; dx++) {\n                        visited[y + dy][x + dx] = true;\n                    }\n                }\n            }\n        }\n    }\n\n    return hitboxes;\n}","export const GUNS = {\n    GLOCK18: {\n        damage: 20,\n        rpm: 1200,\n        rps: 20,\n        recoil: 8,\n        mag: {\n            normal: 23,\n            extended: 33,\n            drum: 50,\n        }\n    }\n}\n","import kaplay from \"./src.js\";\nimport loadAssets from \"./assets.js\";\nimport findPlatformHitbox from \"./platform.js\";\nimport { GUNS } from \"./guns.js\";\n\nloadAssets();\n\nsetGravity(3200);\n\ndocument.addEventListener(\"click\", () => {\n    canvas.requestPointerLock();\n});\n\n//new commit\n// custom component controlling enemy patrol movement\nfunction patrol(speed = 60, dir = 1) {\n    return {\n        id: \"patrol\",\n        require: [\"pos\", \"area\"],\n        add() {\n            this.on(\"collide\", (obj, col) => {\n                if (col.isLeft() || col.isRight()) {\n                    dir = -dir;\n                }\n            });\n        },\n        update() {\n            this.move(speed * dir, 0);\n        },\n    };\n}\n\n// custom component that makes stuff grow big\nfunction big() {\n    let timer = 0;\n    let isBig = false;\n    let destScale = 1;\n    return {\n        // component id / name\n        id: \"big\",\n        // it requires the scale component\n        require: [\"scale\"],\n        // this runs every frame\n        update() {\n            if (isBig) {\n                timer -= dt();\n                if (timer <= 0) {\n                    this.smallify();\n                }\n            }\n            this.scale = this.scale.lerp(vec2(destScale), dt() * 6);\n        },\n        // custom methods\n        isBig() {\n            return isBig;\n        },\n        smallify() {\n            destScale = 1;\n            timer = 0;\n            isBig = false;\n        },\n        biggify(time) {\n            destScale = 2;\n            timer = time;\n            isBig = true;\n        },\n    };\n}\n\n// define some constants\nconst JUMP_FORCE = 990;\nconst MOVE_SPEED = 480;\nconst FALL_DEATH = 2400;\nlet TERMINAL_VELOCITY = 2000;\nlet platformHitbox;\nlet currGun = GUNS.GLOCK18;\n\nconst LEVELS = [\n    [\n        \"                                =                \",\n        \"                                =  =             \",\n        \"         ==           =         =  =             \",\n        \"      ========        =         =  =             \",\n        \"                      =         =                \",\n        \"                      =         =                \",\n        \"=================================================\",\n    ],\n    [\n        \"                          $\",\n        \"                          $\",\n        \"                          $\",\n        \"                          $\",\n        \"                          $\",\n        \"           $$         =   $\",\n        \"         ====         =   $\",\n        \"                      =   $\",\n        \"                      =    \",\n        \"       ^^      = >    =   @\",\n        \"===========================\",\n    ],\n    [\n        \"     $    $    $    $     $\",\n        \"     $    $    $    $     $\",\n        \"                           \",\n        \"                           \",\n        \"                           \",\n        \"                           \",\n        \"                           \",\n        \" ^^^^>^^^^>^^^^>^^^^>^^^^^@\",\n        \"===========================\",\n    ],\n];\n\n// define what each symbol means in the level graph\nconst levelConf = {\n    tileWidth: 64,\n    tileHeight: 64,\n    tiles: {\n        \"=\": () => [\n            sprite(\"grass\"),\n            //area({ friction: 0.02, restitution: 0 }),\n            //body({ isStatic: true }),\n            anchor(\"bot\"),\n            offscreen({ hide: true }),\n            \"platform\",\n        ],\n        \"$\": () => [\n            sprite(\"coin\"),\n            area(),\n            pos(0, -9),\n            anchor(\"bot\"),\n            offscreen({ hide: true }),\n            \"coin\",\n        ],\n        \"^\": () => [\n            sprite(\"spike\"),\n            area(),\n            body({ isStatic: true }),\n            anchor(\"bot\"),\n            offscreen({ hide: true }),\n            \"danger\",\n        ],\n        \">\": () => [\n            sprite(\"evil\"),\n            area(),\n            anchor(\"bot\"),\n            body(),\n            patrol(),\n            offscreen({ hide: true }),\n            \"enemy\",\n        ],\n        \"@\": () => [\n            sprite(\"portal\"),\n            area({ scale: 0.5 }),\n            anchor(\"bot\"),\n            pos(0, -12),\n            offscreen({ hide: true }),\n            \"portal\",\n        ],\n    },\n};\n\nlayers([\n    \"game\",\n    \"ui\"\n], \"game\");\n\nscene(\"game\", ({ levelId, coins } = { levelId: 0, coins: 0 }) => {\n    // add level to scene\n    const level = addLevel(LEVELS[levelId ?? 0], levelConf);\n\n    const hitboxes = findPlatformHitbox(LEVELS[levelId]);\n\n    const TILE_SIZE = 64; // Adjust to match your grid scale\n\n    const X_OFFSET = -32;\n    const Y_OFFSET = -64;\n\n    function createPlatformHitbox(x, y, width, height) {\n        platformHitbox = add([\n            rect(width * TILE_SIZE, height * TILE_SIZE), // Hitbox size\n            pos(x * TILE_SIZE + X_OFFSET, y * TILE_SIZE + Y_OFFSET), // Position\n            area(),\n            body({ isStatic: true }), // Static so it doesn't fall\n            color(255, 0, 0), // Optional: make it semi-transparent for debugging\n            opacity(0),\n            \"p-hitbox\", // Tag for collision detection\n        ]);\n    }\n\n    hitboxes.forEach(({ x, y, width, height }) => {\n        createPlatformHitbox(x, y, width, height);\n    });\n\n    const cursor = add([\n        sprite(\"cursor\"),\n        pos(),\n        layer(\"ui\"),\n        scale(1),\n        //fakeMouse(),\n        anchor(\"center\")\n    ]);\n    setCursor(\"none\");\n\n    // define player object\n    const player = add([\n        rect(62,53),\n        pos(0, 0),\n        area(),\n        scale(1),\n        // makes it fall to gravity and jumpable\n        body(),\n        // the custom component we defined above\n        big(),\n        anchor(\"center\"),\n        rotate(),\n        \"player\",\n        opacity(0),\n    ]);\n    const playerSprite = add([\n        pos(player.pos.x, player.pos.y),\n        //area(),\n        sprite(\"bean\"),\n        anchor(\"center\"),\n        rotate(),\n        \"player-sprite\"\n    ]);\n    const gun = player.add([\n        sprite(\"gun\"),\n        anchor(vec2(-2.3,-0.75)),\n        \"gun\",\n        rotate()\n    ]);\n\n    // update the player-sprite hitbox every frame\n    player.onUpdate(() => {\n        playerSprite.pos = vec2(player.pos.x, player.pos.y);\n    });\n\n    function drawSmallParticle(x, y, f, l) {\n        let size = rand(7, 12);\n        const small_particle = add([\n            rect(size, size),\n            color(74,34,11),\n            pos(x, y-10),\n            anchor(\"center\"),\n            area({ collisionIgnore: [\"particle\", \"player\", \"spike\", \"danger\"], friction: 0.02, restitution: 0 }),\n            \"particle\",\n            \"small-particle\",\n            body(),\n            lifespan(l, { fade: 0.5 }),\n            opacity(1),\n        ]);\n\n        small_particle.addForce(vec2(choose([rand(6000,18000),-rand(6000,18000)]), 0).sub(small_particle.vel).scale(small_particle.mass*f));\n        small_particle.jump(f*rand(800, 1000));\n    }\n\n    const BULLET_SPEED = 1200;\n    const BARREL_OFFSET = 75;\n    function spawnBullet(x, y, dir) {\n        const offset = Vec2.fromAngle(dir).scale(BARREL_OFFSET)\n        const bulletSpawn = vec2(x,y).add(offset);\n\n        const bullet = add([\n            rect(10,5),\n            color(141,145,141),\n            pos(bulletSpawn),\n            anchor(\"center\"),\n            area(),\n            rotate(dir),\n            opacity(),\n            move(Vec2.fromAngle(dir), BULLET_SPEED),\n            lifespan(1.1),\n            \"bullet\"\n        ]);\n        bullet.gravityScale = 0;\n\n        bullet.onCollide(\"p-hitbox\", () => {\n            drawSmallParticle(bullet.pos.x, bullet.pos.y, 0.1, 0.5);\n            destroy(bullet);\n        });\n    }\n\n    let isFiring = false;\n    function fullAuto() {\n        if (!isFiring) return;\n\n        cursor.move(rand(-20*currGun.recoil, 5*currGun.recoil), -currGun.recoil*100+rand(-20*currGun.recoil, 20*currGun.recoil));\n        spawnBullet(player.pos.x, player.pos.y, gun.angle);\n\n        wait(0.05, fullAuto);\n    }\n\n    let prevPos = vec2(player.pos.x, player.pos.y);\n    onUpdate(() => {\n        gun.angle = cursor.pos.sub(player.pos).angle();\n        gun.flipY = Math.abs(gun.angle) > 90;\n        \n        cursor.move(mouseDeltaPos().scale(35));\n\n        // move the mouse with the player\n        let deltaPos = vec2(player.pos.x, player.pos.y).sub(prevPos);\n        cursor.move(deltaPos.scale(60));\n        //debug.log(deltaPos);\n        prevPos = vec2(player.pos.x, player.pos.y);\n\n        if (isMouseDown(\"left\")) {\n            if (!isFiring) {\n                isFiring = true;\n                fullAuto();\n            }   \n        } else {\n            isFiring = false;\n        }\n    });\n\n    // camera lerping and zooming\n    const ZOOM_LERP = 0.1; // Lower = more delay, higher = less delay\n    const DELAY_LERP = 0.035\n    const BASE_ZOOM = 1.25; // Default zoom at ground level\n    const MIN_ZOOM = 0.7; // Minimum zoom when high up\n    const FLOOR_Y = 500;\n    const MAX_HEIGHT = 5000;\n    const ZOOM_SENSITIVITY = 550;\n\n    let targetCamPos = vec2(0, FLOOR_Y)\n\n    onUpdate(() => {\n        targetCamPos = vec2(player.pos.x, Math.min(player.pos.y, FLOOR_Y));\n\n        // Apply smooth interpolation for both X and Y axis (camera delay effect)\n        const camX = lerp(camPos().x, targetCamPos.x, ZOOM_LERP);\n        const camY = lerp(camPos().y, targetCamPos.y, ZOOM_LERP);\n        \n        // Clamp height to avoid extreme zoom-out\n        const clampedHeight = Math.min(Math.max(0, FLOOR_Y - player.pos.y), MAX_HEIGHT);\n        \n        // zoom out at higher y\n        const zoomFactor = Math.max(MIN_ZOOM, BASE_ZOOM - (clampedHeight / ZOOM_SENSITIVITY) * (BASE_ZOOM - MIN_ZOOM));\n        \n        // Apply smoothed camera position and zoom\n        camPos(camX, camY);\n        camScale(zoomFactor);\n    });\n\n    onUpdate(() => setCamPos(lerp(getCamPos(), player.worldPos(), DELAY_LERP)));\n\n    /**\n    onClick(() => {\n        setCursorLocked(true);\n    })\n    **/\n\n    // action() runs every frame\n    let SLAM = false;\n    player.onUpdate(() => {\n        // check fall death\n        if (player.pos.y >= FALL_DEATH) {\n            go(\"lose\");\n        }\n        if (player.vel.y > TERMINAL_VELOCITY) {\n            player.vel.y = TERMINAL_VELOCITY;\n        }\n    });\n\n    player.onBeforePhysicsResolve((collision) => {\n        if (collision.target.is([\"platform\", \"soft\"]) && player.isJumping()) {\n            collision.preventResolution();\n        }\n    });\n\n    player.onPhysicsResolve(() => {\n        // Set the viewport center to player.pos\n        //setCamPos(player.pos);\n    });\n\n    // if player onCollide with any obj with \"danger\" tag, lose\n    player.onCollide(\"danger\", () => {\n        go(\"lose\");\n        play(\"hit\");\n    });\n\n    player.onCollide(\"portal\", () => {\n        play(\"portal\");\n        if (levelId + 1 < LEVELS.length) {\n            go(\"game\", {\n                levelId: levelId + 1,\n                coins: coins,\n            });\n        }\n        else {\n            go(\"win\");\n        }\n    });\n\n    player.onGround((l) => {\n        if (l.is(\"enemy\")) {\n            player.jump(JUMP_FORCE * 1.5);\n            destroy(l);\n            addKaboom(player.pos);\n            play(\"powerup\");\n        }\n    });\n\n    player.onCollide(\"enemy\", (e, col) => {\n        // if it's not from the top, die\n        if (!col?.isBottom()) {\n            go(\"lose\");\n            play(\"hit\");\n        }\n    });\n\n    let hasApple = false;\n\n    // grow an apple if player's head bumps into an obj with \"prize\" tag\n    player.onHeadbutt((obj) => {\n        if (obj.is(\"prize\") && !hasApple) {\n            const apple = level.spawn(\"#\", obj.tilePos.sub(0, 1));\n            apple.jump();\n            hasApple = true;\n            play(\"blip\");\n        }\n    });\n\n    // player grows big onCollide with an \"apple\" obj\n    player.onCollide(\"apple\", (a) => {\n        destroy(a);\n        // as we defined in the big() component\n        player.biggify(3);\n        hasApple = false;\n        play(\"powerup\");\n    });\n\n    let coinPitch = 0;\n\n    onUpdate(() => {\n        if (coinPitch > 0) {\n            coinPitch = Math.max(0, coinPitch - dt() * 100);\n        }\n    });\n\n    player.onCollide(\"coin\", (c) => {\n        destroy(c);\n        play(\"coin\", {\n            detune: coinPitch,\n        });\n        coinPitch += 100;\n        coins += 1;\n        coinsLabel.text = coins;\n    });\n\n    const coinsLabel = add([\n        text(coins),\n        pos(24, 24),\n        fixed(),\n    ]);\n\n    let canDoubleJump = true;\n    let wallSliding = false;\n    async function jump() {\n        if (player.isGrounded() && !wallSliding) {\n            player.jump(JUMP_FORCE);\n            canDoubleJump = true;\n        } else if (!player.isGrounded() && canDoubleJump) {\n            player.jump(JUMP_FORCE * 0.8);\n            canDoubleJump = false;\n        }\n        else if (wallSliding) {\n            canDoubleJump = true;\n        } \n    }\n\n    // gliding\n    let canGlide = true;\n    function glide() {\n        if (player.isGrounded() || !canGlide) return;\n        \n        if (player.vel.y > 0) {\n            player.vel.y = 0;\n            playerSprite.sprite = \"umbrella-hat\";\n            player.gravityScale = 0.1;\n            canGlide = false;\n            wait(1, () => {\n                playerSprite.sprite = \"bean\";\n                player.gravityScale = 1; \n            });\n        }\n    }\n\n    // drop the propeller hat when done\n    function dropPropeller() {\n        let prop_particle = add([\n            sprite(\"propeller\"),\n            pos(player.pos.x, player.pos.y-50),\n            anchor(\"center\"),\n            area({ collisionIgnore: [\"particle\", \"player\"], friction: 0.1, restitution: 0 }),\n            \"particle\",\n            body(),\n            lifespan(0.5, { fade: 0.5 }),\n            opacity(1),\n            move(LEFT, rand(60, 240)),\n            rotate()\n        ]);\n\n        prop_particle.jump(-player.vel.y+rand(200, 400));\n        prop_particle.onUpdate(() => prop_particle.angle -= 90 * dt());\n    }\n\n    // boost\n    let canBoost = true;\n    function boost() {\n        if (!canBoost) return; // Prevent re-triggering while boosting\n    \n        player.gravityScale = 0;\n        canBoost = false; // Disable re-triggering\n        canDoubleJump = false; // disable double-jumping while boosting\n        playerSprite.sprite = \"propeller-hat\";\n        player.vel.y = 0;\n        player.gravityScale = -0.5;\n        wait(0.6, () => {\n            playerSprite.sprite = \"bean\";\n            dropPropeller();\n            player.gravityScale = 1;\n        });\n    }\n\n    function slam() {\n        for (let i = 0; i < rand(5,7); i++) {\n            drawSmallParticle(player.pos.x, player.pos.y, 1, 2);\n        }\n    }\n\n    player.on(\"ground\", () => {\n        playerSprite.sprite = \"bean\";\n        player.gravityScale = 1;\n        canGlide = true; // Re-enable gliding\n        canBoost = true; // enable boost\n    });\n    player.onCollide(\"p-hitbox\", () => {\n        if (player.vel.y >= TERMINAL_VELOCITY) { slam(); console.log(\"SLAMMED!\")}\n    });\n\n    // wall sliding and gravity reset\n    let lean_dir = 0;\n    let canWallslide = false;\n    player.onCollideUpdate(\"p-hitbox\", () => {\n        if (player.isGrounded()) { player.gravityScale = 1; }\n        if (!player.isGrounded() && player.vel.y >= 0 && canWallslide) { \n            player.vel.y = 0;\n            TERMINAL_VELOCITY = 500;\n            wallSliding = true;\n            playerSprite.rotateTo(30*lean_dir);\n\n            if (wallSliding) {\n                player.onCollideEnd(() => {\n                    player.gravityScale = 1;\n                    TERMINAL_VELOCITY = 2000;\n                    wallSliding = false;\n                    playerSprite.rotateTo(0);\n                    canDoubleJump = true;\n                });\n            }\n        } else {\n            player.gravityScale = 1;\n            TERMINAL_VELOCITY = 2000;\n            playerSprite.rotateTo(0);\n        }\n    });\n\n    // wall sliding particle\n    let direction;\n    player.onCollide(\"p-hitbox\", (obj, col) => { if (col.isLeft()) { direction = RIGHT; } else { direction = LEFT; } });\n    loop(0.15, () => {\n        if (wallSliding) {\n            const sp = add([\n                pos(player.pos.x-16, player.pos.y-32),\n                rect(8,8),\n                color(74,34,11),\n                anchor(\"center\"),\n                area({ collisionIgnore: [\"particle\", \"player\", \"danger\", \"enemy\"] }),\n                body(),\n                lifespan(0.5, { fade: 0.5 }),\n                opacity(1),\n                move(direction, rand(100, 150)),\n                \"particle\",\n            ]);\n            //sp.jump(333);\n        }\n    });\n\n    onKeyPress(\"w\", () => { jump(); });\n\n    // glide with space\n    onKeyPress(\"space\", glide);\n\n    onKeyPress(\"c\", () => { if (!player.isGrounded()) { boost(); }});\n\n    onKeyDown(\"a\", () => {\n        player.move(-MOVE_SPEED, 0);\n        canWallslide = true;\n        lean_dir = 1;\n    });\n    onKeyRelease(\"a\", () => {\n        canWallslide = false;\n    });\n\n    onKeyDown(\"d\", () => {\n        player.move(MOVE_SPEED, 0);\n        canWallslide = true;\n        lean_dir = -1;\n    });\n    onKeyRelease(\"d\", () => {\n        canWallslide = false;\n    });\n\n    onKeyPress(\"s\", () => {\n        player.gravityScale = 3;\n    });\n\n    onKeyRelease(\"s\", () => {\n        player.gravityScale = 1;\n    });\n\n    onGamepadButtonPress(\"south\", jump);\n\n    onGamepadStick(\"left\", (v) => {\n        player.move(v.x * MOVE_SPEED, 0);\n    });\n\n    onKeyPress(\"f\", () => {\n        setFullscreen(!isFullscreen());\n    });\n});\n\nscene(\"lose\", () => {\n    add([\n        text(\"You Lose\"),\n    ]);\n    onKeyPress(() => go(\"game\"));\n});\n\nscene(\"win\", () => {\n    add([\n        text(\"You Win\"),\n    ]);\n    onKeyPress(() => go(\"game\"));\n});\n\ngo(\"game\");\n"],"names":["kaplay","loadAssets","findPlatformHitbox","map","height","width","visited","hitboxes","expandRectangle","startX","startY","maxWidth","maxHeight","x","y","rect","dy","dx","GUNS","patrol","speed","dir","obj","col","big","timer","isBig","destScale","time","JUMP_FORCE","MOVE_SPEED","FALL_DEATH","TERMINAL_VELOCITY","currGun","LEVELS","levelConf","levelId","coins","level","TILE_SIZE","X_OFFSET","Y_OFFSET","createPlatformHitbox","cursor","player","playerSprite","gun","drawSmallParticle","l","size","small_particle","BULLET_SPEED","BARREL_OFFSET","spawnBullet","offset","bulletSpawn","bullet","isFiring","fullAuto","prevPos","deltaPos","ZOOM_LERP","DELAY_LERP","BASE_ZOOM","MIN_ZOOM","FLOOR_Y","MAX_HEIGHT","ZOOM_SENSITIVITY","targetCamPos","camX","camY","clampedHeight","zoomFactor","collision","e","hasApple","a","coinPitch","c","coinsLabel","canDoubleJump","wallSliding","jump","canGlide","glide","dropPropeller","prop_particle","canBoost","boost","slam","i","lean_dir","canWallslide","direction","v"],"mappings":"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"}
